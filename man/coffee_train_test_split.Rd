% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coffee_train_test_split.R
\name{coffee_train_test_split}
\alias{coffee_train_test_split}
\title{Train/Test Split Data in the COFFEE procedure}
\usage{
coffee_train_test_split(TS_data, num_train, num_test)
}
\arguments{
\item{TS_data}{Time Series data (possibly containing data from empirical_growth_rates function)}

\item{num_train}{Number of training data observations desired}

\item{num_test}{Number of testing data observations desired}
}
\value{
A list containing
\item{TS_train_data}{A dataframe of 'num_train' rows. If TS_data has N rows, this dataframe are rows (N - num_test - num_train + 1):(N - num_test) of TS_data}
\item{TS_test_data}{A dataframe of 'num_test' rows. If TS_data has N rows, this dataframe are rows (N - num_test + 1):N}
}
\description{
Train/Test Split Data in the COFFEE procedure
}
\examples{
data("jh_data_daily_confirm")
data("state_population")

# Specify the count data to be days 1-550 of Pennsylvania's daily Covid-19 cases
count_data = jh_data_daily_confirm$Pennsylvania[1:550]

# Specify the time data to be days 1-550
time_data = jh_data_daily_confirm$date[1:550]

# Add a "day of week" effect to the model
by_factor = jh_data_daily_confirm$day_of_week[1:550]

num_train = 28
num_test = 14
num_forecast = 14

# Get Florida Population and use .55 as susceptible population proportion
population = state_population$Pennsylvania[1]
susc_perc = .55
total_cases = sum(jh_data_daily_confirm$Pennsylvania[1:550])

# Empirical Growth Rate (EGR) and EGR Model is needed to calculate
# random vectors sampled from the empirical growth rate model
Penn_emp_grow_rate = empirical_growth_rates(count_data = count_data,
                                            time_data = time_data,
                                            num_train = num_train,
                                            num_test = num_test,
                                            population = population,
                                            susc_perc = susc_perc,
                                            by_factor = by_factor)

# Split data
split = coffee_train_test_split(TS_data = Penn_emp_grow_rate$data,
                                num_train = num_train,
                                num_test = num_test)

TS_test_data = split$TS_test_data
TS_train_data = split$TS_train_data
}
