% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_inv_dist.R
\name{sample_inv_dist}
\alias{sample_inv_dist}
\title{Accept-Reject Method with the Inverse Distance function.}
\usage{
sample_inv_dist(
  n,
  TS_test_data,
  TS_train_data,
  eta_bounds,
  omega_bounds,
  phi_bounds,
  max_draws = 10000,
  accept_const = NULL
)
}
\arguments{
\item{n}{Number of samples "(eta, omega, phi)" to draw from the pdf defined by the inverse distance function.
Drawn samples are used in Drawn samples are used in coffee_method/coffee_forecast functions}

\item{TS_test_data}{Testing Time Series data. See example.}

\item{TS_train_data}{Training Time Series data. See example.}

\item{eta_bounds}{Bounds for random variable eta. Typically c(0,1)}

\item{omega_bounds}{Bounds for random variable omega. Typically c(1,T) for T = number of future values to predict.}

\item{phi_bounds}{Bounds for random variable phi. Typically of form (1 - a, 1 + a) for some 0 < a < 1.}

\item{max_draws}{Max number of draws for accept-reject method before a force exit.}

\item{accept_const}{(Optional). Accept-Reject constant. If left NULL, an accept-reject constant will be calculated.}
}
\value{
A n x 3 matrix of random samples drawn in accordance to the pdf defined by the inverse distance function.
}
\description{
Accept-Reject Method with the Inverse Distance function.
}
\examples{

# Example dataset
data("jh_data_daily_confirm")
data("state_population")

# Specify the count data to be days 800-900 of Rhode Island's daily Covid-19 cases
count_data = jh_data_daily_confirm$`Rhode Island`[800:900]

# Specify the time data to be days 800-900
time_data = jh_data_daily_confirm$date[800:900]

# Add a "day of week" effect to the model
by_factor = jh_data_daily_confirm$day_of_week[800:900]

num_train_days = 28
num_test_days = 14

# Get Rhode Island Population and use .55 as susceptible population proportion
population = state_population$Rhode.Island[1]
susc_perc = .55

R_I_emp_grow_rate = empirical_growth_rates(count_data = count_data,
                                           time_data = time_data,
                                           num_train = num_train_days,
                                           num_test = num_test_days,
                                           population = population,
                                           susc_perc = susc_perc,
                                           by_factor = by_factor)

TS_train_data = R_I_emp_grow_rate$data[1:num_train_days, ]
TS_test_data = R_I_emp_grow_rate$data[-(1:num_train_days), ]

eta_bounds = c(0,1)
omega_bounds = c(1, 5)
phi_bounds = c(.5,1.5)

# It is recommended that the function be run in parallel if multiple draws are needed.
# This is a small example.
x = sample_inv_dist(1, TS_test_data = TS_test_data, TS_train_data = TS_train_data,
                    eta_bounds = eta_bounds, omega_bounds = omega_bounds, phi_bounds = phi_bounds)
}
