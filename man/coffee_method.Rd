% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coffee_method.R
\name{coffee_method}
\alias{coffee_method}
\title{Implement The COFFEE Procedure}
\usage{
coffee_method(
  count_data,
  time_data,
  by_factor = NULL,
  pred_time_data,
  pred_by_factor = NULL,
  population,
  adjust_data = TRUE,
  num_train = 28,
  num_test = 14,
  total_cases = NULL,
  susc_perc = 0.55,
  random_vectors = NULL,
  num_random_vectors = 50,
  eta_bounds = c(0, 1),
  omega_bounds = c(1, 14),
  phi_bounds = c(0.9, 1.1),
  accept_const = NULL,
  max_draws = 10000,
  attack_rate_bounds = c(0.4, 0.7),
  cooks_constant = 4,
  return_plot = TRUE
)
}
\arguments{
\item{count_data}{Response vector of Count Data with (potential) outliers}

\item{time_data}{Covariate vector of Time Data}

\item{by_factor}{(Optional) Additional categorical covariate}

\item{pred_time_data}{Time data for future forecast values}

\item{pred_by_factor}{(Optional) by_factor data for future forecast values}

\item{population}{Total population (constant)}

\item{adjust_data}{(Optional) Adjust the given count data for outliers before doing COFFEE proceudure? Boolean TRUE/FALSE}

\item{num_train}{(Optional) Number of training data to take when constructing empirical growth rate models.}

\item{num_test}{(Optional) Number of testing data to take when constructing inverse distance function for random vector sampling.}

\item{total_cases}{(Optional) Total number of cases currently observed in the population (constant).
If NULL, total_cases will be sum of count data which may not give intended results}

\item{susc_perc}{Constant between 0 and 1. Represents the percent of the population that is susceptible}

\item{random_vectors}{(Optional) Random samples of (eta, omega, phi) from inverse distance function. See sample_inv_dist.
If NULL, random vectors will be calculated (which may be time consuming).}

\item{num_random_vectors}{Number of samples "(eta, omega, phi)" to draw from the pdf defined by the inverse distance function.}

\item{eta_bounds}{(Optional) Bounds for random variable eta. Typically c(0,1)}

\item{omega_bounds}{(Optional) Bounds for random variable omega. Typically c(1,T) for T = number of future values to predict.}

\item{phi_bounds}{(Optional) Bounds for random variable phi. Typically of form (1 - a, 1 + a) for some 0 < a < 1.}

\item{accept_const}{(Optional). Accept-Reject constant. If left NULL, an accept-reject constant will be calculated.}

\item{max_draws}{Max number of draws for accept-reject method before a force exit.}

\item{attack_rate_bounds}{(Optional) Lower and Upper bounds to uniformly sample attack rate}

\item{cooks_constant}{(Optional) Specify the sensitivity to outliers. Lower values give higher sensitivity.}

\item{return_plot}{(Optional) Return ggplot visualization of forecast values}
}
\value{
A list containing
\item{full_forecast_data}{For each random vector, a time series of future forecast values is calculated. These are
saved row-wise in this matrix, along with the pred_time_data}
\item{simplified_data}{A dataframe of length(pred_time_data) containing pred_time_data,
median of forecast count data, and 10/25/75/90 quantiles of forecast count data}
\item{plot}{(Optional) A ggplot2 object visualizing forecast data}
}
\description{
Implement The COFFEE Procedure
}
\examples{
# Example dataset
data("jh_data_daily_confirm")
data("state_population")

num_train = 28
num_test = 14
num_forecast = 14
adjust_data = TRUE

# Get New Mexico Population and use .55 as susceptible population proportion
population = state_population$New.Mexico[1]
susc_perc = .55

# Specify the count data to be days 1-273 of New Mexico's daily Covid-19 cases
count_data = jh_data_daily_confirm$`New Mexico`[1:273]

# Specify the time data to be days 1-273
time_data = jh_data_daily_confirm$date[1:273]

# Add a "day of week" effect to the model
by_factor = jh_data_daily_confirm$day_of_week[1:273]

# Get time data corresponding to forecastfuture values
first_pred_date = time_data[length(time_data)] + 1
last_pred_date = time_data[length(time_data)] + num_forecast

pred_time_data = seq.Date(first_pred_date, last_pred_date, by = 'day')

# Get the Day of week for each corresponding day
pred_by_factor = format(pred_time_data, '\%a')

data("new_mexico_random_vectors_example")
random_vector = new_mexico_random_vectors_example

new_mexico_future_forecast = coffee_method(count_data = count_data, time_data = time_data,
                                           by_factor = by_factor, pred_time_data = pred_time_data,
                                           pred_by_factor = pred_by_factor, population = population,
                                           susc_perc = .55, adjust_data = TRUE, return_plot = TRUE)
}
\references{
Castro (2020) COFFEE: COVID-19 Forecasts using Fast Evaluations and Estimation
\doi{10.48550/arXiv.2110.01546}.
}
