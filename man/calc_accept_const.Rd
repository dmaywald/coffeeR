% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_accept_const.R
\name{calc_accept_const}
\alias{calc_accept_const}
\title{Calculate Acceptance Constant used in sample_inv_dist}
\usage{
calc_accept_const(
  eta_bounds,
  omega_bounds,
  phi_bounds,
  N = 50000,
  TS_data,
  kappa_const_dow,
  eta_coeff,
  num_test
)
}
\arguments{
\item{eta_bounds}{Bounds for random variable eta. Typically c(0,1)}

\item{omega_bounds}{Bounds for random variable omega. Typically c(1,T) for T = number of future values to predict.}

\item{phi_bounds}{Bounds for random variable phi. Typically of form (1 - a, 1 + a) for some 0 < a < 1.}

\item{N}{(Optional) Number of uniformly random values to sample in the bounds of eta/omega/phi to estimate the maximum value of the inverse distance function}

\item{TS_data}{Dataframe from empirical_growth_rates function. Should only be rows corresponding to last 'num_test' entries}

\item{kappa_const_dow}{Kappa Const+DOW described by equation 14 in https://arxiv.org/pdf/2110.01546}

\item{eta_coeff}{eta* value described by equation 15 in https://arxiv.org/pdf/2110.01546}

\item{num_test}{Number of testing values.}
}
\value{
Estimated maximal value of inverse distance function to be used in sample_inv_dist.
}
\description{
Calculate Acceptance Constant used in sample_inv_dist
}
\examples{
#'# Example dataset
data("jh_data_daily_confirm")
data("state_population")

# Specify the count data to be days 1-550 of Pennsylvania's daily Covid-19 cases
count_data = jh_data_daily_confirm$Pennsylvania[1:550]

# Specify the time data to be days 1-550
time_data = as.numeric(jh_data_daily_confirm$date[1:550])

# Add a "day of week" effect to the model
by_factor = jh_data_daily_confirm$day_of_week[1:550]

TS_data = adjust_outliers(count_data, time_data, by_factor, cooks_constant = 4, return_plot = FALSE)

count_data = TS_data$data$adjusted_data

num_train = 28
num_test = 14
num_forecast = 14

# Get Pennsylvania Population and use .55 as susceptible population proportion
population = state_population$Pennsylvania[1]
susc_perc = .55

# Empirical Growth Rate (EGR) and EGR Model is needed to calculate
# random vectors sampled from the empirical growth rate model
Penn_emp_grow_rate = empirical_growth_rates(count_data = count_data,
                                            time_data = time_data,
                                            num_train = num_train,
                                            num_test = num_test,
                                            population = population,
                                            susc_perc = susc_perc,
                                            by_factor = by_factor)

TS_train_data = Penn_emp_grow_rate$data[1:num_train, ]
TS_test_data = Penn_emp_grow_rate$data[-(1:num_train), ]

eta_bounds = c(0,1)
omega_bounds = c(1, num_forecast)
phi_bounds = c(.9,1.1)

kappa_const_dow = TS_test_data$kappa_const + TS_test_data$kappa_dow

eta_coeff = stats::median(TS_train_data$kappa_star[(num_train - 6):num_train])

accept_const = calc_accept_const(eta_bounds = eta_bounds, omega_bounds = omega_bounds,
                                 phi_bounds = phi_bounds, N = 50000,
                                 TS_data = TS_test_data,
                                 kappa_const_dow = kappa_const_dow,
                                 eta_coeff = eta_coeff, num_test = num_test)
}
