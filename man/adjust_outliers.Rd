% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust_outliers.R
\name{adjust_outliers}
\alias{adjust_outliers}
\title{Adjust Time Series Data for Outliers}
\usage{
adjust_outliers(
  count_data,
  time_data,
  by_factor = NULL,
  cooks_constant = 4,
  return_plot = FALSE
)
}
\arguments{
\item{count_data}{Response vector of Count Data with (potential) outliers}

\item{time_data}{Covariate vector of Time Data}

\item{by_factor}{(Optional) Additional categorical covariate}

\item{cooks_constant}{(Optional) Specify the sensitivity to outliers. Lower values give higher sensitivity.}

\item{return_plot}{(Optional) Boolean argument to return a ggplot2 plot object}
}
\value{
A list containing
\item{data}{A dataframe with original count_data, original time_data, original by_factor, and new outlier adjusted data}
\item{outliers}{Indices of data points flagged as outliers}
\item{models}{A list containing the 3 spline models used to fit the count data}
\item{plot}{A ggplot2 object visualizing the outlier adjusted data}
}
\description{
Adjust Time Series Data for Outliers
}
\examples{
#' # Example dataset
data("jh_data_daily_confirm")

# Specify the count data to be the first 300 days of Kansas' daily Covid-19 cases
count_data = jh_data_daily_confirm$Kansas[1:300]

# Specify the time data to be the first 300 days
time_data = jh_data_daily_confirm$date[1:300]

# Add a "day of week" effect to the model
by_factor = jh_data_daily_confirm$day_of_week[1:300]

Kansas_data = adjust_outliers(count_data, time_data, by_factor, return_plot = TRUE)
}
